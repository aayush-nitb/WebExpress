{
  "name": "app-login",
  "version": "0.0.1",
  "description": "It provides server login and signup functionality. It remembers login for 24hrs at server end. All passwords and tokens are encrypted, so that the session is secured.",
  "author": "aayush.nitb@gmail.com",
  "dependencies": {},
  "attrs": {
    "model": ["string", "molecules/app-login/models/login", "Optional json path wrt app root, to specify db details."]
  },
  "model": {
    "server": ["string", "localhost:27017", "Name of server where db is hosted."],
    "db": ["string", "webexpress", "Name of database."],
    "db_user": ["string", "root", "Username for connecting db."],
    "db_pass": ["string", "", "Password for connecting db."],
    "collection": ["string", "users", "Name of collection where user objects should be stored."]
  },
  "events": {},
  "methods": {
    "login(user, password)": "This will open a user session at server end for 24 hrs.",
    "authorize(req)": "This is a wrapper of jquery ajax function containing in-built headers for authentication. It returns jqXHR object. req is ajax settings.",
    "logout()": "This will close the user session at server end.",
    "getUser()": "Returns the current logged-in user.",
    "getAuth()": "Returns the auth token of current logged-in user. All user-specific rest calls must include this token for authentication at server end.",
    "registerSuccess(callback)": "This will register a success callback for authorize method.",
    "registerFailure(callback)": "This will register a failure callback for authorize method."
  },
  "services": [{
    "name": "login.coffee",
    "description": "Include this file in your service handler to get authentication methods.",
    "methods": {
        "auth(req, res, next)": "This is a middleware method for node express module. The next callback is called only when basic auth is matched against the db.",
        "user()": "Returns the username of current logged-in user."
    }
  }]
}
